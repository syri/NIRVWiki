{"version":3,"sources":["assets/logo-simple.png","components/header.tsx","components/navigationPage.tsx","components/navigationCategory.tsx","components/navigationFooter.tsx","components/navigationHeader.tsx","components/navigation.tsx","components/wikiPage.tsx","index.tsx"],"names":["module","exports","Header","props","navigationOpen","window","addEventListener","resize","this","removeEventListener","hideNavigation","showNavigation","setContentVisibility","navigationBar","document","getElementById","wikiPageContent","style","display","innerWidth","location","hash","reload","id","className","onClick","toggleNavigation","onHeaderClicked","Component","NavigationPage","category","file","slice","openPage","name","NavigationCategory","state","visible","categorySaveValue","localStorage","getItem","setState","JSON","parse","pages","page","push","key","path","setItem","stringify","toggleVisibility","getPages","NavigationFooter","NavigationHeader","src","Logo","alt","Navigation","categories","structure","getCategories","WikiPage","pagesDirectory","fetch","then","response","json","data","getPageContent","pageToLoad","substring","foundPage","loadFile","a","trim","text","currentPage","content","home","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.6dc32561.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-simple.7a71fbf4.png\";","import React, { Component } from 'react';\n\n\ninterface IHeaderProps {}\ninterface IHeaderState {}\n\nexport default class Header extends Component<IHeaderProps, IHeaderState> {\n  private navigationOpen: boolean;\n\n  constructor(props: IHeaderProps) {\n    super(props);\n\n    this.navigationOpen = true;\n\n    window.addEventListener('resize', () => this.resize());\n    window.addEventListener('orientationchange', () => this.resize());\n  }\n\n  componentDidMount(): void {\n    this.resize();\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('resize', () => this.resize());\n    window.removeEventListener('orientationchange', () => this.resize());\n  }\n\n  toggleNavigation(): void {\n    if (this.navigationOpen) this.hideNavigation(true);\n    else this.showNavigation(true);\n  }\n\n  showNavigation(setContentVisibility: boolean = false): void {\n    let navigationBar = document.getElementById('navigation');\n    let wikiPageContent = document.getElementById('content');\n\n    this.navigationOpen = true;\n\n    if (navigationBar) navigationBar.style.display = 'flex';\n    if (wikiPageContent && setContentVisibility) wikiPageContent.style.display = 'none';\n  }\n\n  hideNavigation(setContentVisibility: boolean = false): void {\n    let navigationBar = document.getElementById('navigation');\n    let wikiPageContent = document.getElementById('content');\n\n    this.navigationOpen = false;\n\n    if (navigationBar) navigationBar.style.display = 'none';\n    if (wikiPageContent && setContentVisibility) wikiPageContent.style.display = 'flex';\n  }\n\n  resize(): void {\n    if (window.innerWidth <= 576) this.hideNavigation();\n\n    if (!this.navigationOpen && window.innerWidth > 576) {\n      let wikiPageContent = document.getElementById('content');\n\n      this.showNavigation();\n\n      if (wikiPageContent) wikiPageContent.style.display = 'block';\n    }\n  }\n\n  onHeaderClicked() {\n    window.location.hash = '#/';\n    window.location.reload();\n  }\n\n  render(): JSX.Element {\n    return(\n      <div id='header' className='unselectable'>\n        <div id='header-menu' onClick={() => this.toggleNavigation()}>â˜°</div>\n        <h1 onClick={() => this.onHeaderClicked()}>NIRV Wiki</h1>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\r\n\r\n\r\ninterface INavigationPageProps {\r\n  category: string;\r\n  name: string;\r\n  file: string;\r\n}\r\ninterface INavigationPageState {}\r\n\r\nexport default class NavigationPage extends Component<INavigationPageProps, INavigationPageState> {\r\n  openPage(): void {\r\n    if (this.props.category === 'default') window.location.hash = '#/' + this.props.file.slice(0, -3);\r\n    else window.location.hash = '#/' + this.props.category + this.props.file.slice(0, -3);\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div className='navigation-page'>\r\n        <div className='navigation-page-name' onClick={() => this.openPage()}>{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavigationPage from './navigationPage';\r\n\r\n\r\ninterface INavigationCategoryProps {\r\n  name: string;\r\n  path: string;\r\n  pages: IPage[];\r\n}\r\ninterface INavigationCategoryState {\r\n  visible: boolean;\r\n}\r\n\r\nexport default class NavigationCategory extends Component<INavigationCategoryProps, INavigationCategoryState> {\r\n  constructor(props: INavigationCategoryProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: this.props.name === 'default' ? true : false\r\n    };\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    let categorySaveValue = window.localStorage.getItem(`${this.props.name}-categoryOpen`);\r\n\r\n    this.setState({ visible: JSON.parse(categorySaveValue ? categorySaveValue : 'false') });\r\n  }\r\n\r\n  getPages(): React.ReactNode[] {\r\n    let pages: React.ReactNode[] = [];\r\n\r\n    for (let page of this.props.pages) {\r\n      pages.push(<NavigationPage key={page.name} category={this.props.path} name={page.name} file={page.file} />);\r\n    }\r\n\r\n    return pages;\r\n  }\r\n\r\n  toggleVisibility(): void {\r\n    this.setState({ visible: !this.state.visible }, () => {\r\n      window.localStorage.setItem(`${this.props.name}-categoryOpen`, JSON.stringify(this.state.visible));\r\n    });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div className='navigation-category unselectable'>\r\n        {this.props.name !== 'default'\r\n        ? <div className='navigation-category-name' onClick={() => this.toggleVisibility()}><span className='arrow'>{this.state.visible ? 'â–²' : 'â–¼'}</span>{this.props.name}</div>\r\n        : null}\r\n        {this.state.visible || this.props.name === 'default' ? this.getPages() : null}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\n\r\ninterface INavigationHeaderProps {}\r\ninterface INavigationHeaderState {}\r\n\r\nexport default class NavigationFooter extends Component<INavigationHeaderProps, INavigationHeaderState> {\r\n  render(): JSX.Element {\r\n    return(\r\n      <div id='navigation-footer'>\r\n        <div id='navigation-footer-content' className='unselectable'>Â© NIRV Team, 2020</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Logo from '../assets/logo-simple.png';\r\n\r\n\r\ninterface INavigationHeaderProps {}\r\ninterface INavigationHeaderState {}\r\n\r\nexport default class NavigationHeader extends Component<INavigationHeaderProps, INavigationHeaderState> {\r\n  render(): JSX.Element {\r\n    return(\r\n      <div id='navigation-header'>\r\n        <img id='navigation-header-logo' src={Logo} alt='Logo' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavigationCategory from './navigationCategory';\r\nimport NavigationFooter from './navigationFooter';\r\nimport NavigationHeader from './navigationHeader';\r\n\r\n\r\ninterface INavigationProps {\r\n  structure: IStructure;\r\n}\r\ninterface INavigationState {}\r\n\r\nexport default class Navigation extends Component<INavigationProps, INavigationState> {\r\n  getCategories(): React.ReactNode[] {\r\n    let categories: React.ReactNode[] = [];\r\n\r\n    if (this.props.structure.categories) {\r\n      for (let category of this.props.structure.categories) {\r\n        categories.push(<NavigationCategory key={category.name} path={category.path} name={category.name} pages={category.pages} />);\r\n      }\r\n    }\r\n\r\n    return categories;\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return(\r\n      <div id='navigation'>\r\n        <NavigationHeader />\r\n        <div id='navigation-container'>\r\n          <div id='navigation-content'>\r\n            {this.getCategories()}\r\n          </div>\r\n          <NavigationFooter />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport Navigation from './navigation';\r\n\r\n\r\ninterface IWikiPageProps {}\r\ninterface IWikiPageState {\r\n  structure: IStructure;\r\n  currentPage?: { page: IPage, content?: string };\r\n}\r\n\r\nexport default class WikiPage extends Component<IWikiPageProps, IWikiPageState> {\r\n  pagesDirectory: string;\r\n  \r\n  constructor(props: IWikiPageProps) {\r\n    super(props);\r\n\r\n    this.pagesDirectory = 'pages/';\r\n\r\n    this.state = {\r\n      structure: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    fetch('/structure.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ structure: data }, () => this.getPageContent());\r\n      }\r\n    );\r\n  }\r\n\r\n  getPageContent(): void {\r\n    let pageToLoad = window.location.hash.substring(2);\r\n    let foundPage = false;\r\n\r\n    let loadFile = async (file: string) => {\r\n      let response = await fetch(`/${file.trim()}`);\r\n      \r\n      return response.text();\r\n    }\r\n\r\n    if (pageToLoad && this.state.structure.categories) {\r\n      for (let category of this.state.structure.categories) {\r\n        for (let page of category.pages) {\r\n          if (category.path + page.file.slice(0, -3) === pageToLoad) {\r\n            loadFile(this.pagesDirectory + category.path + page.file).then(data => {\r\n              this.setState({ currentPage: { page: { name: page.name, file: page.file }, content: data } });\r\n            });\r\n\r\n            foundPage = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!foundPage && this.state.structure.categories) {\r\n      if (window.location.hash !== '#/') window.location.hash = '#/';\r\n\r\n      for (let category of this.state.structure.categories) {\r\n        for (let page of category.pages) {\r\n          if (page.home) loadFile(this.pagesDirectory + category.path + page.file).then(data => {\r\n            this.setState({ currentPage: { page: { name: page.name, file: page.file }, content: data } })\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return(\r\n      <div id='wiki-page'>\r\n        <Navigation structure={this.state.structure} />\r\n        <div id='content'>\r\n          <Markdown>{this.state.currentPage ? this.state.currentPage.content : ''}</Markdown>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Header, WikiPage } from './components';\n\nimport './css';\n\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <Header />\n    <WikiPage />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}